<!-- # Estudo JavaScript

# Curso Completo de JavaScript, TypeScript, NodeJS e Muito Mais

Este curso foi projetado para você que deseja dominar o desenvolvimento de aplicações JavaScript para sites e sistemas que rodam no browser. Através de exemplos práticos e variados, você aprenderá a criar projetos robustos, utilizando as tecnologias mais modernas do mercado.

## Tecnologias Abordadas

- **JavaScript**
- **TypeScript**
- **NodeJS**
- **MongoDB**
- **Mongoose**
- **Expressões Regulares (Regex)**
- **Ajax**
- **Orientação a Objetos (OOP)**
- **Padrão MVC (Model-View-Controller)**
- **ES Modules**
- **Webpack**
- **Babel**
- **E muito mais...**

## O que Você Vai Aprender?

Com este treinamento, você será capaz de desenvolver códigos JavaScript para diferentes tipos de projetos, desde sites dinâmicos até sistemas complexos que rodam diretamente no browser. Você aprenderá a:

- Popular páginas utilizando requisições **Ajax**.
- Validar formulários e persistir dados localmente no browser.
- Implementar soluções práticas que vão transformar sua maneira de pensar como um desenvolvedor front-end.

Se você quer aprender tudo sobre JavaScript e se tornar um verdadeiro especialista, este é o curso certo para você.

## Conteúdo do Curso

### 1. JavaScript: O Coração do Front-End
Aprenda JavaScript de forma completa, cobrindo desde os fundamentos até técnicas avançadas.

### 2. TypeScript: Tipagem no JavaScript
Descubra o **TypeScript**, uma camada extra sobre o JavaScript que adiciona tipagem estática, proporcionando mais segurança e confiança no desenvolvimento.

### 3. NodeJS: JavaScript no Servidor
Uma introdução ao **NodeJS**, mostrando como você pode levar o JavaScript para o lado do servidor, criando aplicações completas.

### 4. MongoDB e Mongoose: Persistência de Dados
Crie uma aplicação RESTful que consome dados armazenados em **MongoDB**, utilizando o **Mongoose** para gerenciar os dados.

### 5. Async/Await: Requisições Assíncronas Modernas
Entenda a abordagem moderna para lidar com requisições assíncronas de forma mais limpa e eficiente.

### 6. MVC: Organizando o Projeto
Implemente o padrão **MVC** (Model-View-Controller) para manter seu código organizado e fácil de manter, apresentando dados na view sempre que houver alteração na model.

### 7. Expressões Regulares: Manipulação de Strings
Aprenda a usar **Expressões Regulares (Regex)** para encontrar e modificar padrões específicos em strings de forma eficiente.

### 8. Orientação a Objetos: Estruturando Aplicações
Utilize conceitos de **Orientação a Objetos (OOP)** para construir aplicações modulares e reutilizáveis.

### 9. Tooling: Ferramentas Modernas de Desenvolvimento
Configure e utilize **Webpack** e **Babel** para criar aplicações que funcionam perfeitamente em diferentes navegadores (cross-browser). -->